// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using api.Database;

#nullable disable

namespace api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("api.Database.Entities.Dispatcher.DispatcherEntity", b =>
                {
                    b.Property<int?>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Code"));

                    b.Property<string>("NomApels")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("Dispatcher");
                });

            modelBuilder.Entity("api.Database.Entities.Product.ProductEntity", b =>
                {
                    b.Property<int?>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Code"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("api.Database.Entities.RegisterMachine.RegisterMachineEntity", b =>
                {
                    b.Property<int?>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Code");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("Code"));

                    b.Property<int>("Floor")
                        .HasColumnType("integer");

                    b.HasKey("Code");

                    b.ToTable("RegisterMachine");
                });

            modelBuilder.Entity("api.Database.Entities.Sell.SellEntity", b =>
                {
                    b.Property<int>("Product")
                        .HasColumnType("integer")
                        .HasColumnName("Product");

                    b.Property<int>("Dispatcher")
                        .HasColumnType("integer")
                        .HasColumnName("Dispatcher");

                    b.Property<int>("Machine")
                        .HasColumnType("integer")
                        .HasColumnName("Machine");

                    b.HasKey("Product", "Dispatcher", "Machine");

                    b.HasIndex("Dispatcher");

                    b.HasIndex("Machine");

                    b.ToTable("Sell");
                });

            modelBuilder.Entity("api.Database.Entities.Sell.SellEntity", b =>
                {
                    b.HasOne("api.Database.Entities.Dispatcher.DispatcherEntity", "dispatcherRelation")
                        .WithMany("Sells")
                        .HasForeignKey("Dispatcher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Database.Entities.RegisterMachine.RegisterMachineEntity", "registerMachineRelation")
                        .WithMany("Sells")
                        .HasForeignKey("Machine")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("api.Database.Entities.Product.ProductEntity", "productRelation")
                        .WithMany("Sells")
                        .HasForeignKey("Product")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dispatcherRelation");

                    b.Navigation("productRelation");

                    b.Navigation("registerMachineRelation");
                });

            modelBuilder.Entity("api.Database.Entities.Dispatcher.DispatcherEntity", b =>
                {
                    b.Navigation("Sells");
                });

            modelBuilder.Entity("api.Database.Entities.Product.ProductEntity", b =>
                {
                    b.Navigation("Sells");
                });

            modelBuilder.Entity("api.Database.Entities.RegisterMachine.RegisterMachineEntity", b =>
                {
                    b.Navigation("Sells");
                });
#pragma warning restore 612, 618
        }
    }
}
